(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{110:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return d}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var b=r.a.createContext({}),s=function(e){var t=r.a.useContext(b),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=s(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),u=s(a),p=n,d=u["".concat(l,".").concat(p)]||u[p]||m[p]||i;return a?r.a.createElement(d,o(o({ref:t},b),{},{components:a})):r.a.createElement(d,o({ref:t},b))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=p;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var b=2;b<i;b++)l[b]=a[b];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}p.displayName="MDXCreateElement"},93:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return o})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return s}));var n=a(2),r=a(6),i=(a(0),a(110)),l={title:"CS2102 Databases (Closed book, 1pg cheatsheet)"},o={unversionedId:"markdown/CS2102",id:"markdown/CS2102",isDocsHomePage:!1,title:"CS2102 Databases (Closed book, 1pg cheatsheet)",description:"Database Management Systems (DBMS)",source:"@site/docs/markdown/CS2102.md",slug:"/markdown/CS2102",permalink:"/My-Docs/docs/markdown/CS2102",editUrl:"https://github.com/crazoter/My-Docs/edit/main/docs/markdown/CS2102.md",version:"current",sidebar:"someSidebar",previous:{title:"Problems",permalink:"/My-Docs/docs/markdown/problem_summaries"},next:{title:"Tech lookup",permalink:"/My-Docs/docs/"}},c=[{value:"Database Management Systems (DBMS)",id:"database-management-systems-dbms",children:[]}],b={rightToc:c};function s(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h3",{id:"database-management-systems-dbms"},"Database Management Systems (DBMS)"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Data Independence"),Object(i.b)("li",{parentName:"ul"},"Efficient Data access"),Object(i.b)("li",{parentName:"ul"},"Data integrity & security"),Object(i.b)("li",{parentName:"ul"},"Transaction Management"),Object(i.b)("li",{parentName:"ul"},"Query language"),Object(i.b)("li",{parentName:"ul"},"Database design"),Object(i.b)("li",{parentName:"ul"},"Database programming"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Data model"),": used by DBMS, defined by user for querying the data"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Schema"),": Description of the data model"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Schema instance"),": Content of the DB at a specific time"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Relational Model (RDBMS)"),": Microsoft SQL, SAP, MySQL, SQLite",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Data modeled using ",Object(i.b)("strong",{parentName:"li"},"relations")," (i.e. tables)"),Object(i.b)("li",{parentName:"ul"},"Each relation defined by ",Object(i.b)("strong",{parentName:"li"},"relation schema"),", and a relation is a set of tuples",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Relation schema: (attributes, data constraints, domain constraints)",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"e.g. (id: int, name: text, birthDate: date)"),Object(i.b)("li",{parentName:"ul"},"Attribute: Column name",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Must be a value in domain or null"))),Object(i.b)("li",{parentName:"ul"},"Domain: datatype"),Object(i.b)("li",{parentName:"ul"},"Data constraints: e.g. non null, unique etc",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"(Data) Integrity Constraint: Specified with schema, ensure relation instance is ",Object(i.b)("em",{parentName:"li"},"legal"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Domain constraints (datatype)"),Object(i.b)("li",{parentName:"ul"},"Key constraints",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Non-null"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Superkey"),": combination of attributes(columns) that uniquely identifies each tuple"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Key"),": smallest combination of attributes that uniquely identifies each tuple"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Candidate Key"),": possible keys"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Primary key")," (PK): key chosen to uniquely ID each tuple"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Foreign key")," (FK): attribute (or set of attributes) that refer to the PK of another relation",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Must either refer to a valid PK or be set to NULL"),Object(i.b)("li",{parentName:"ul"},"FK constraints are known as ",Object(i.b)("strong",{parentName:"li"},"referential integrity constraints")))))),Object(i.b)("li",{parentName:"ul"},"Foreign key constraints (FK must exist if set)"),Object(i.b)("li",{parentName:"ul"},"Other data constraints"))))))),Object(i.b)("li",{parentName:"ul"},"Each row in a relation is a tuple/record has one component per attribute"),Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("strong",{parentName:"li"},"relational database schema"),": collection of relation schemas + data constraints"),Object(i.b)("li",{parentName:"ul"},"Relation (relation instance): A table populated with data"),Object(i.b)("li",{parentName:"ul"},"Relational database (database instance): collection of tables"))))),Object(i.b)("li",{parentName:"ul"},"Object-relational model: Postgres")))}s.isMDXComponent=!0}}]);