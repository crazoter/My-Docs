(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{107:function(e,t,a){"use strict";a.d(t,"a",(function(){return l})),a.d(t,"b",(function(){return O}));var n=a(0),r=a.n(n);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var m=r.a.createContext({}),b=function(e){var t=r.a.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},l=function(e){var t=b(e.components);return r.a.createElement(m.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,o=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),l=b(a),u=n,O=l["".concat(o,".").concat(u)]||l[u]||p[u]||c;return a?r.a.createElement(O,i(i({ref:t},m),{},{components:a})):r.a.createElement(O,i({ref:t},m))}));function O(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,o=new Array(c);o[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var m=2;m<c;m++)o[m]=a[m];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"},79:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return i})),a.d(t,"rightToc",(function(){return s})),a.d(t,"default",(function(){return b}));var n=a(2),r=a(6),c=(a(0),a(107)),o={title:"Problems"},i={unversionedId:"markdown/problem_summaries",id:"markdown/problem_summaries",isDocsHomePage:!1,title:"Problems",description:"A quick reference to known problems and their solutions, ordered by the type of problem.",source:"@site/docs/markdown/problem_summaries.md",slug:"/markdown/problem_summaries",permalink:"/My-Docs/docs/markdown/problem_summaries",editUrl:"https://github.com/crazoter/My-Docs/edit/main/docs/markdown/problem_summaries.md",version:"current",sidebar:"someSidebar",previous:{title:"Formal Verification",permalink:"/My-Docs/docs/markdown/formal_verification"},next:{title:"CS2102 Databases (Closed book, 1pg cheatsheet)",permalink:"/My-Docs/docs/markdown/CS2102"}},s=[],m={rightToc:s};function b(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},m,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"A quick reference to known problems and their solutions, ordered by the type of problem."),Object(c.b)("p",null,Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://leetcode.com/explore/featured/card/january-leetcoding-challenge-2021/579/week-1-january-1st-january-7th/3589/"}),"Verify if list of items can be represented by blocks of items")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Inputs"),": ",Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},"A: List of ",Object(c.b)("strong",{parentName:"li"},"unique")," integers"),Object(c.b)("li",{parentName:"ul"},"B: List of integer sequences (e.g. ",Object(c.b)("inlineCode",{parentName:"li"},"[1,3]"),") comprising of ",Object(c.b)("strong",{parentName:"li"},"unique")," integers"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Task"),":",Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},"Verify A can be created by only concatenating the sequences in B"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Solution"),": Amortized Time & Space O(n)",Object(c.b)("ol",{parentName:"li"},Object(c.b)("li",{parentName:"ol"},"Assume uniqueness of items and correctness of input (e.g. A and B's contents are of the same length, all items unique)"),Object(c.b)("li",{parentName:"ol"},"Create an index lookup for A using a hashtable."),Object(c.b)("li",{parentName:"ol"},Object(c.b)("span",Object(n.a)({parentName:"li"},{className:"math math-inline"}),Object(c.b)("span",Object(n.a)({parentName:"span"},{className:"katex"}),Object(c.b)("span",Object(n.a)({parentName:"span"},{className:"katex-mathml"}),Object(c.b)("math",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML"}),Object(c.b)("semantics",{parentName:"math"},Object(c.b)("mrow",{parentName:"semantics"},Object(c.b)("mi",Object(n.a)({parentName:"mrow"},{mathvariant:"normal"}),"\u2200")),Object(c.b)("annotation",Object(n.a)({parentName:"semantics"},{encoding:"application/x-tex"}),"\\forall")))),Object(c.b)("span",Object(n.a)({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),Object(c.b)("span",Object(n.a)({parentName:"span"},{className:"base"}),Object(c.b)("span",Object(n.a)({parentName:"span"},{className:"strut",style:{height:"0.69444em",verticalAlign:"0em"}})),Object(c.b)("span",Object(n.a)({parentName:"span"},{className:"mord"}),"\u2200")))))," blocks in B, verify that ",Object(c.b)("span",Object(n.a)({parentName:"li"},{className:"math math-inline"}),Object(c.b)("span",Object(n.a)({parentName:"span"},{className:"katex"}),Object(c.b)("span",Object(n.a)({parentName:"span"},{className:"katex-mathml"}),Object(c.b)("math",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML"}),Object(c.b)("semantics",{parentName:"math"},Object(c.b)("mrow",{parentName:"semantics"},Object(c.b)("mi",Object(n.a)({parentName:"mrow"},{mathvariant:"normal"}),"\u2200")),Object(c.b)("annotation",Object(n.a)({parentName:"semantics"},{encoding:"application/x-tex"}),"\\forall")))),Object(c.b)("span",Object(n.a)({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),Object(c.b)("span",Object(n.a)({parentName:"span"},{className:"base"}),Object(c.b)("span",Object(n.a)({parentName:"span"},{className:"strut",style:{height:"0.69444em",verticalAlign:"0em"}})),Object(c.b)("span",Object(n.a)({parentName:"span"},{className:"mord"}),"\u2200")))))," items, ",Object(c.b)("inlineCode",{parentName:"li"},"index > -1")," and items have consecutive indexes (i.e. ",Object(c.b)("inlineCode",{parentName:"li"},"index == prevIndex + 1")," except the first index)")))))}b.isMDXComponent=!0}}]);